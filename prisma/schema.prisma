// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now())
}

model MagicLinkToken {
  id        Int       @id @default(autoincrement())
  email     String
  token     String    @unique
  expiresAt DateTime
  usedAt    DateTime?
  createdAt DateTime  @default(now())
}

model Store {
  id         String   @id @default(cuid())
  name       String
  domain     String   @unique
  created_at DateTime @default(now())

  // Relationships
  products  Product[]
  customers Customer[]
  orders    Order[]

  @@map("stores")
}

model Product {
  id         Int      @id @default(autoincrement())
  tenant_id  String
  shopify_id String
  title      String?
  price      Float?
  created_at DateTime @default(now())

  // Add relationship back - REQUIRED
  store Store @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@unique([tenant_id, shopify_id], name: "uniq_products_tenant_shopify")
  @@index([tenant_id], map: "idx_products_tenant")
  @@map("products")
}

model Customer {
  id         Int      @id @default(autoincrement())
  tenant_id  String
  shopify_id String
  email      String?
  first_name String?
  last_name  String?
  created_at DateTime @default(now())

  // Add relationship
  store Store @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@unique([tenant_id, shopify_id], name: "uniq_customers_tenant_shopify")
  @@index([tenant_id], map: "idx_customers_tenant")
  @@map("customers")
}

model Order {
  id               Int      @id @default(autoincrement())
  tenant_id        String
  shopify_id       String
  customer_id      String?
  total_price      Float?
  financial_status String?
  created_at       DateTime @default(now())

  // Add relationship
  store Store @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@unique([tenant_id, shopify_id], name: "uniq_orders_tenant_shopify")
  @@index([tenant_id], map: "idx_orders_tenant")
  @@map("orders")
}
